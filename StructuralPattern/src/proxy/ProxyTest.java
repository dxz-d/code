package proxy;

/**
 * 
 * @author 
 * 	代理者模式：例如：比如说找工作的中介，买票的12306
 *  	 定义：由于某些原因需要给某对象提供提供一个代理以控制对该对象的访问。
 *  		  这时，访问对象不适合或者不能直接引用目标对象，代理对象作为访问对象和目标对象之间的中介
 *
 *	・远程代理：这种方式通常是为了隐藏目标对象存在于不同地址空间的事实，方便客户端访问。例如：用户申请某些网盘空间
 *  时，会在用户的文件系统中监理一个虚拟的硬盘，用户访问虚拟硬盘时实际访问的时网盘空间。
 *  ・虚拟代理：这种方式通常用于要创建的目标对象开销很大时。例如，下载一幅很大的图像需要很长时间，因某种计算比较复杂
 *  而短时间无法完成，这时可以先用小比例的虚拟代理真实的对象，消除用户对服务器慢的感觉。
 *  ・安全代理：这种方式通常用于控制不同种类客户对真实对象的访问权限。
 *  ・智能指引：主要用于调用目标对象时，代理附加一些额外的处理能力。例如，增加计算真实的引用次数的功能，这样当该对象
 *  没有被引用时，就可以自动释放它。
 *  延迟加载：指为了提高系统的性能，延迟对目标的加载。例如，Hibernate中存在属性的延迟加载和关联表的的延迟加载。
 */
public class ProxyTest {

	public static void main(String[] args) {

		Proxy proxy = new Proxy();
		proxy.request();
	}

}

package demo4;

import java.util.Arrays;

/**
 * 
 * @author 刁秀泽 冒泡排序
 */
public class QuickSort {

	public static void main(String[] args) {

		int[] arr = new int[] { 3, 2, 52, 8, 19, 0, 9, 7, 6, 1, 222, 3, 2 };
		quickSort(arr, 0, arr.length - 1);
		System.out.println(Arrays.toString(arr));
	}

	public static void quickSort(int[] arr, int start, int end) {
		if (start < end) {
			// 把数组中的第0个数组作为标准数
			int stard = arr[start];
			// 记录需要排序的下标
			int low = start;
			int hign = end;
			// 循环找比标准数大的数和比标准数小的数
			while (low < hign) {
				// 右边的数比标准数大
				while (low < hign && stard <= arr[hign]) {
					hign--;
				}
				// 如果右边的数字替换左边的数
				arr[low] = arr[hign];
				// 如果左边的数字比标准数小
				while (low < hign && arr[low] <= stard) {
					low++;
				}
				arr[hign] = arr[low];
			}
			// 把标准数赋给低所在的位置的元素
			arr[low] = stard;
			// 处理所有小的数字
			quickSort(arr, start, low);
			// 处理所有大的数字
			quickSort(arr, low + 1, end);
		}
	}
}
